version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:18.20
    environment:
      AWS_REGION: us-east-1

jobs:
  snyk_scan:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install Python, pip, jq, and awscli
          command: |
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip jq awscli
      - run:
          name: Assume AWS OIDC Role
          command: |
            ROLE_ARN="arn:aws:iam::961341535277:role/circleci"
            if [ ! -f /tmp/circleci_oidc_token ]; then
              echo "OIDC token file not found! Make sure 'oidc: true' is set under this job in your workflow." && exit 1
            fi
            OIDC_TOKEN=$(cat /tmp/circleci_oidc_token)
            CREDS_JSON=$(aws sts assume-role-with-web-identity  \
              --role-arn "$ROLE_ARN" \
              --role-session-name "circleci" \
              --web-identity-token "$OIDC_TOKEN" \
              --region $AWS_REGION)
            export AWS_ACCESS_KEY_ID=$(echo "$CREDS_JSON" | jq -r '.Credentials.AccessKeyId')
            export AWS_SECRET_ACCESS_KEY=$(echo "$CREDS_JSON" | jq -r '.Credentials.SecretAccessKey')
            export AWS_SESSION_TOKEN=$(echo "$CREDS_JSON" | jq -r '.Credentials.SessionToken')
            echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN" >> $BASH_ENV
      - run:
          name: Install Python dependencies
          command: |
            if [ -f requirements.txt ]; then
              pip3 install -r requirements.txt
            fi
      - run:
          name: Fetch snyk API token from Secrets Manager
          command: |
            export SNYK_TOKEN=$(aws secretsmanager get-secret-value --region $AWS_REGION --secret-id ci/snyk/api-token --query SecretString --output text | jq -r .SNYK_TOKEN)
            echo "export SNYK_TOKEN=$SNYK_TOKEN" >> $BASH_ENV
      - run:
          name: Install snyk CLI
          command: npm install -g snyk
      - run:
          name: Run snyk test
          command: snyk test

workflows:
  snyk_security_scan:
    jobs:
      - snyk_scan